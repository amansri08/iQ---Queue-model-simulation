//
// Generated file, do not edit! Created by opp_msgc 4.3 from instruction.msg.
//

#ifndef _INSTRUCTION_M_H_
#define _INSTRUCTION_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif


namespace BranchComp {

/**
 * Class generated from <tt>instruction.msg</tt> by opp_msgc.
 * <pre>
 * message Instruction {
 * 		long dep;
 * 		string type;
 * 		long id;
 * }
 * </pre>
 */
class Instruction : public ::cMessage
{
  protected:
    long dep_var;
    opp_string type_var;
    long id_var;

  private:
    void copy(const Instruction& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Instruction&);

  public:
    Instruction(const char *name=NULL, int kind=0);
    Instruction(const Instruction& other);
    virtual ~Instruction();
    Instruction& operator=(const Instruction& other);
    virtual Instruction *dup() const {return new Instruction(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual long getDep() const;
    virtual void setDep(long dep);
    virtual const char * getType() const;
    virtual void setType(const char * type);
    virtual long getId() const;
    virtual void setId(long id);
};

inline void doPacking(cCommBuffer *b, Instruction& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Instruction& obj) {obj.parsimUnpack(b);}

}; // end namespace BranchComp

#endif // _INSTRUCTION_M_H_
